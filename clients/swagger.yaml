swagger: "2.0"
info:
  title: Mainflux clients service
  description: HTTP API for managing platform devices, applications and channels.
  version: "1.0.0"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /clients:
    post:
      summary: Adds new client
      description: |
        Adds new client to the list of clients owned by user identified using
        the provided access token.
      tags:
        - clients
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: client
          description: JSON-formatted document describing the new client.
          in: body
          schema:
            $ref: "#/definitions/ClientReq"
          required: true
      responses:
        201:
          description: Client registered.
          headers:
            Location:
              type: string
              description: Created client's relative URL (i.e. /clients/{clientId}).
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    get:
      summary: Retrieves managed clients
      description: |
        Retrieves a list of managed clients. Due to performance concerns, data
        is retrieved in subsets. The API clients must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - clients
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/Offset"
      responses:
        200:
          description: Data retrieved.
          headers:
            X-Count:
              type: integer
              description: |
                Total number of managed clients. This value can be used to
                implement the paging strategy on API clients.
          schema:
            $ref: "#/definitions/ClientList"
        400:
          description: Failed due to malformed query parameters.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /clients/{clientId}:
    get:
      summary: Retrieves client info
      tags:
        - clients
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ClientId"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ClientRes"
        403:
          description: Missing or invalid access token provided.
        404:
          description: Client does not exist.
        500:
          $ref: "#/responses/ServiceError"
    put:
      summary: Updates client info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the client's type and ID
        cannot be changed.
      tags:
        - clients
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ClientId"
        - name: client
          description: JSON-formatted document describing the updated client.
          in: body
          schema:
            $ref: "#/definitions/ClientReq"
          required: true
      responses:
        200:
          description: Client updated.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Client does not exist.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Removes a client
      description: |
        Removes a client. The service will ensure that the removed client is
        disconnected from all of the existing channels.
      tags:
        - clients
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ClientId"
      responses:
        204:
          description: Client removed.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /channels:
    post:
      summary: Creates new channel
      description: |
        Creates new channel. User identified by the provided access token will
        be the channel's owner.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - name: channel
          description: JSON-formatted document describing the new channel.
          in: body
          schema:
            $ref: "#/definitions/ChannelReq"
          required: true
      responses:
        201:
          description: Channel created.
          headers:
            Location:
              type: string
              description: Created channel's relative URL (i.e. /channels/{chanId}).
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    get:
      summary: Retrieves managed channels
      description: |
        Retrieves a list of managed channels. Due to performance concerns, data
        is retrieved in subsets. The API clients must ensure that the entire
        dataset is consumed either by making subsequent requests, or by
        increasing the subset size of the initial request.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/Offset"
      responses:
        200:
          description: Data retrieved.
          headers:
            X-Count:
              type: integer
              description: |
                Total number of managed channels. This value can be used to
                implement the paging strategy on API clients.
          schema:
            $ref: "#/definitions/ChannelList"
        400:
          description: Failed due to malformed query parameters.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /channels/{chanId}:
    get:
      summary: Retrieves channel info
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ChanId"
      responses:
        200:
          description: Data retrieved.
          schema:
            $ref: "#/definitions/ChannelRes"
        403:
          description: Missing or invalid access token provided.
        404:
          description: Channel does not exist.
        500:
          $ref: "#/responses/ServiceError"
    put:
      summary: Updates channel info
      description: |
        Update is performed by replacing the current resource data with values
        provided in a request payload. Note that the channel's ID will not be
        affected.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ChanId"
        - name: channel
          description: JSON-formatted document describing the updated channel.
          in: body
          schema:
            $ref: "#/definitions/ChannelReq"
          required: true
      responses:
        200:
          description: Channel updated.
        400:
          description: Failed due to malformed JSON.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Channel does not exist.
        415:
          description: Missing or invalid content type.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Removes a channel
      description: |
        Removes a channel. The service will ensure that the subscribed apps and
        devices are unsubscribed from the removed channel.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ChanId"
      responses:
        204:
          description: Channel removed.
        403:
          description: Missing or invalid access token provided.
        500:
          $ref: "#/responses/ServiceError"
  /channels/{chanId}/clients/{clientId}:
    put:
      summary: Connects the client to the channel
      description: |
        Creates connection between a client and a channel. Once connected to
        the channel, clients are allowed to exchange messages through it.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ChanId"
        - $ref: "#/parameters/ClientId"
      responses:
        200:
          description: Client connected.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Channel or client does not exist.
        500:
          $ref: "#/responses/ServiceError"
    delete:
      summary: Disconnects the client from the channel
      description: |
        Removes connection between a client and a channel. Once connection is
        removed, client can no longer exchange messages through the channel.
      tags:
        - channels
      parameters:
        - $ref: "#/parameters/Authorization"
        - $ref: "#/parameters/ChanId"
        - $ref: "#/parameters/ClientId"
      responses:
        204:
          description: Client disconnected.
        403:
          description: Missing or invalid access token provided.
        404:
          description: Channel or client does not exist.
        500:
          $ref: "#/responses/ServiceError"
parameters:
  Authorization:
    name: Authorization
    description: User's access token.
    in: header
    type: string
    required: true
  ChanId:
    name: chanId
    description: Unique channel identifier.
    in: path
    type: string
    format: uuid
    required: true
  ClientId:
    name: clientId
    description: Unique client identifier.
    in: path
    type: string
    format: uuid
    required: true
  Limit:
    name: limit
    description: Size of the subset to retrieve.
    in: query
    type: integer
    default: 10
    maximum: 100
    minimum: 1
    required: false
  Offset:
    name: offset
    description: Number of items to skip during retrieval.
    in: query
    type: integer
    default: 0
    minimum: 0
    required: false

responses:
  ServiceError:
    description: Unexpected server-side error occured.

definitions:
  ChannelList:
    type: object
    properties:
      channels:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          type: object
          properties:
            id:
              type: string
              description: Unique channel identifier generated by the service.
            name:
              type: string
              description: Free-form channel name.
          required:
            - id
    required:
      - channels
  ChannelRes:
    type: object
    properties:
      id:
        type: string
        description: Unique channel identifier generated by the service.
      name:
        type: string
        description: Free-form channel name.
      connected:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: '#/definitions/ClientRes'
    required:
      - id
  ChannelReq:
    type: object
    properties:
      name:
        type: string
        description: Free-form channel name.
  ClientList:
    type: object
    properties:
      clients:
        type: array
        minItems: 0
        uniqueItems: true
        items:
          $ref: "#/definitions/ClientRes"
    required:
      - clients
  ClientRes:
    type: object
    properties:
      id:
        type: string
        description: Unique client identifier generated by the service.
      type:
        type: string
        enum:
          - app
          - device
        description: Type of the client.
      name:
        type: string
        description: Free-form client name.
      key:
        type: string
        description: Auto-generated access key.
      payload:
        type: string
        description: Arbitrary, string-encoded client's data.
    required:
      - id
      - type
      - key
  ClientReq:
    type: object
    properties:
      type:
        type: string
        enum:
          - app
          - device
        description: Type of the client.
      name:
        type: string
        description: Free-form client name.
      payload:
        type: string
        description: Arbitrary, string-encoded client's data.
    required:
      - type
