###
# Copyright (c) Mainflux
#
# Mainflux server is licensed under an Apache license, version 2.0 license.
# All rights not explicitly granted in the Apache license, version 2.0 are reserved.
# See the included LICENSE file for more details.
###

version: '2'

services:
  ###
  # MongoDB
  ###
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
      - "28017:28017"
    container_name: mainflux-mongodb
    command: --smallfiles --nojournal
    networks:
      - mainflux

  ### 
  # Redis
  ###
  redis:
    image: redis:alpine
    container_name: mainflux-redis
    ports:
      - "6379:6379"
    networks:
      - mainflux
      - lora

  ###
  # NATS
  ###
  nats:
    image: nats:latest
    container_name: mainflux-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - mainflux

  ###
  # Mainflux MQTT Broker
  ###
  mainflux-mqtt:
    image: mainflux/mainflux-mqtt:latest
    container_name: mainflux-mqtt
    ports:
      - "1883:1883"
    networks:
      - mainflux

  ###
  # Mainflux Core Server
  ###
  mainflux-core:
    image: mainflux/mainflux-core:latest
    container_name: mainflux-core
    ports:
      - "7070:7070"
    networks:
      - mainflux

  ############
  ### LoRa ###
  ############
  ###
  # Postgres
  ###
  postgres:
    image: postgres:9.5
    environment:
      - POSTGRES_PASSWORD=loraserver
      - POSTGRES_USER=loraserver
      - POSTGRES_DB=loraserver
    networks:
      - lora

  ###
  # Mosquitto
  ###
  mosquitto:
    image: ansi/mosquitto
    networks:
      - lora

  ###
  # LoRaWAN Gateway Bridge
  ###
  lora-gateway-bridge:
    image: mainflux/loraserver-docker:lora-gateway-bridge
    container_name: mainflux-lora-gateway-bridge
    command: dockerize -wait tcp://mosquitto:1883 -timeout 10s ./lora-gateway-bridge
    ports:
      - "1700/udp:1700/udp"
    environment:
      - MQTT_SERVER=tcp://mosquitto:1883
    networks:
      - lora

  ###
  # LoRaWAN Network Server
  ###
  lora-network-server:
    image: mainflux/loraserver-docker:loraserver
    container_name: mainflux-lora-network-server
    command: dockerize -wait tcp://postgres:5432 -wait tcp://mosquitto:1883 -wait tcp://redis:6379 -timeout 10s ./loraserver
    environment:
      - POSTGRES_DSN=postgres://loraserver:loraserver@postgres/loraserver?sslmode=disable
      - DB_AUTOMIGRATE=true
      - NET_ID=010203
      - BAND=EU_863_870
      - REDIS_URL=redis://redis:6379
      - GW_MQTT_SERVER=tcp://mosquitto:1883
      - APP_MQTT_SERVER=tcp://mosquitto:1883
      - AS_SERVER=lora-app-server:8001
    networks:
      - lora

  ###
  # LoRaWAN Application Server
  ###
  lora-app-server:
    volumes:
      - ./certs:/opt/lora/lora-app-server/certs
    image: mainflux/loraserver-docker:lora-app-server
    container_name: mainflux-lora-app-server
    command: dockerize -wait tcp://postgres:5432 -wait tcp://mosquitto:1883 -wait tcp://redis:6379 -timeout 10s ./lora-app-server
    ports:
      - "8080:8080"
    environment:
      - DB_AUTOMIGRATE=true
      - POSTGRES_DSN=postgres://loraserver:loraserver@postgres/loraserver?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - MQTT_SERVER=tcp://mosquitto:1883
      - NS_SERVER=lora-network-server:8000
      - HTTP_TLS_CERT=/opt/lora/lora-app-server/certs/http-tls.crt
      - HTTP_TLS_KEY=/opt/lora/lora-app-server/certs/http-tls.key
      - JWT_SECRET=Gb11Z5i9q7NoF39M+CZ7OnFGkWz2jkR+BEJY1e//ZVQ=
    networks:
      - lora

networks:
  mainflux:
  lora:
